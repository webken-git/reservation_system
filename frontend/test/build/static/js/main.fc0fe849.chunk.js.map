{"version":3,"sources":["store/spinnerSlice.js","store/authSlice.js","store/alertSlice.js","store/userSlice.js","store/index.js","hooks/useAuth.js","Route/PrivateRoute.js","Route/LoginRoute.js","Route/LogoutRoute.js","components/user/Home_unauthenticated.js","hooks/useUser.js","hooks/useAlert.js","utils/authUrls.js","components/user/Home_authenticated.js","components/user/Home.js","components/user/UserInfoChangeForm.js","components/user/UserPage.js","components/user/LoginForm.js","components/user/LogoutForm.js","components/user/LoginFormLayout.js","hooks/useSpinner.js","components/Spinner.js","components/user/LoginFormContainer.js","components/user/Nomatch.js","MainContent.js","components/Logged_in_Navbar.js","components/UnLogged_in_Navbar.js","components/Header.js","components/LoggedOut.js","App.js","index.js"],"names":["spinnerSlice","createSlice","name","initialState","progress","show","dialogMessage","reducers","startProgress","state","action","payload","stopProgress","actions","selectProgress","spinner","selectShow","selectMessage","authSlice","isAuthenticated","loginUser","logoutUser","selectIsAuthenticated","auth","alertSlice","alerts","createAlert","message","type","selectAlerts","notifications","userSlice","getUserList","userList","resetUserList","selectUsers","users","combineReducers","spinnerReducer","authReducer","alertReducer","usersReducer","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","useAuth","dispatch","useDispatch","useSelector","PrivateRoute","Component","component","rest","render","props","to","LoginRoute","LogoutRoute","Home_unauthenticated","history","useHistory","onClick","push","useUser","useAlert","alert","ROOT_URL","process","AuthUrls","LOGIN","STAFF_LOGIN","LOGOUT","CHANGE_PASSWORD","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","GET_USER_DATA","GET_USER_LIST","Home_authenticated","useState","setUser","setUserList","get_user_ListUrl","get_userUrl","pullUserList","a","axios","get","response","responseMap","data","map","obj","responseData","_","mapKeys","email","UserList","Object","values","useEffect","className","user","console","log","id","Home","Home_contents","Container","fluid","Row","UserInfoChangeForm","setEmail","useForm","handleSubmit","register","errors","getUser","patch_User","patch","Form","onSubmit","Group","as","controlId","Label","Control","placeholder","defaultValue","isInvalid","e","preventDefault","ref","required","pattern","value","Button","UserPage","UserInfoChangeFormComponent","React","memo","style","padding","Col","sm","md","variant","size","LoginForm","formState","noValidate","Feedback","password","maxLength","ButtonToolbar","disabled","isSubmitting","LogoutForm","logoutUrl","post","LoginFormLayout","Card","Header","Body","children","useSpinner","SpinnerModal","backdrop","keyboard","Spinner","animation","role","LoginFormContainer","loginUrl","Modal","form","Fragment","Nomatch","MainContent","exact","path","Login","Logout","User","Logged_in_NavbarComponent","Navbar","bg","expand","Brand","alt","src","width","height","Toggle","Collapse","Nav","Link","UnLogged_in_NavbarComponent","NavbarComponent","NavbarContent","Cookies","defaults","xsrfCookieName","xsrfHeaderName","withCredentials","App","persistor","persistStore","ReactDOM","CookiesProvider","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fc0fe849.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    progress: false,\r\n    show: false,\r\n    dialogMessage: \"テストメッセージ\"\r\n};\r\n\r\nexport const spinnerSlice = createSlice({\r\n    name: 'spinner',\r\n    initialState,\r\n    reducers: {\r\n        startProgress(state, action) {\r\n            return {\r\n                ...state, progress: true, show: true, dialogMessage: action.payload.dialogMessage\r\n            }\r\n        },\r\n        stopProgress(state) {\r\n            return {\r\n                ...state, progress: false, show: false, dialogMessage: \"\"\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const { startProgress, stopProgress } = spinnerSlice.actions;\r\n// 現在のprogressの状態を取得するSelectorのexport\r\nexport const selectProgress = ({ spinner }) => spinner.progress;\r\nexport const selectShow = ({ spinner }) => spinner.show;\r\nexport const selectMessage = ({ spinner }) => spinner.dialogMessage;\r\n// Reducerのexport\r\nexport default spinnerSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        loginUser: (state) => {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n            };\r\n      },\r\n        logoutUser: (state) => {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n            };\r\n      },\r\n    },\r\n});\r\n\r\nexport const { loginUser, logoutUser } = authSlice.actions;\r\nexport const selectIsAuthenticated = ({ auth }) => auth.isAuthenticated;\r\nexport default authSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    alerts: [],\r\n};\r\n\r\nexport const alertSlice = createSlice({\r\n    name: \"alert\",\r\n    initialState,\r\n    reducers: {\r\n        createAlert: (state, action) => {\r\n            return {\r\n                ...state,\r\n                alerts: [...state.alerts, { message: action.payload.message, type: action.payload.type },\r\n                ],\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const { createAlert } = alertSlice.actions;\r\n\r\nexport const selectAlerts = ({ notifications }) => notifications.alerts;\r\n\r\n// export Reducer\r\nexport default alertSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n    initialState: [],\r\n    reducers: {\r\n        getUserList: (state, action) => {\r\n            return {\r\n                ...state,\r\n                userList: action.payload\r\n            };\r\n        },\r\n\r\n        resetUserList: () => {\r\n            return []\r\n        },\r\n      }\r\n});\r\n\r\nexport const { getUserList, resetUserList } = userSlice.actions;\r\nexport const selectUsers = ({ users }) => users;\r\nexport default userSlice.reducer;\r\n","import { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport spinnerReducer from './spinnerSlice';\r\nimport authReducer from './authSlice';\r\nimport alertReducer from './alertSlice';\r\nimport usersReducer from './userSlice';\r\nimport {\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n}from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst reducers = combineReducers({\r\n    spinner: spinnerReducer,\r\n    auth: authReducer,\r\n    notifications: alertReducer,\r\n    users: usersReducer,\r\n});\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root', // Storageに保存されるキー名を指定する\r\n    storage, // 保存先としてlocalStorageがここで設定される\r\n    whitelist: ['auth'] // Stateは`todos`のみStorageに保存する\r\n    // blacklist: ['visibilityFilter'] // `visibilityFilter`は保存しない\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        }\r\n    })\r\n});\r\n\r\nexport default store;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { selectIsAuthenticated, loginUser, logoutUser } from '../store/authSlice';\r\n\r\nfunction useAuth() {\r\n    // Sliceで定義したアクションをdispatchで呼び出す\r\n    const dispatch = useDispatch();\r\n\r\n    return {\r\n        isAuthenticated: useSelector(selectIsAuthenticated),\r\n        // call action\r\n        loginUser: () => dispatch(loginUser()),\r\n        logoutUser: () => dispatch(logoutUser()),\r\n    };\r\n}\r\n\r\nexport default useAuth;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n            render={(props) =>\r\n                isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nconst LoginRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n        />\r\n    );\r\n};\r\n\r\nexport default LoginRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nconst LogoutRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n            {...rest}\r\n            render={(props) =>\r\n              isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default LogoutRoute;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Col, Jumbotron, Card, ListGroup } from \"react-bootstrap\";\r\n\r\nconst Home_unauthenticated = () => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            <p>\r\n                あなたはログインしていません。\r\n            </p>\r\n            <button onClick={() => history.push(\"/login\")}>\r\n                ログイン\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home_unauthenticated;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserList, resetUserList, selectUsers} from '../store/userSlice';\r\n\r\nfunction useUser() {\r\n    const dispatch = useDispatch();\r\n\r\n    return {\r\n        users: useSelector(selectUsers),\r\n        getUserList: (users) => dispatch(getUserList(users)),\r\n        resetUserList: () => dispatch(resetUserList()),\r\n    };\r\n}\r\n\r\nexport default useUser;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { createAlert, selectAlerts } from \"../store/alertSlice\";\r\n\r\nfunction useAlert() {\r\n    const dispatch = useDispatch();\r\n\r\n    return {\r\n        alerts: useSelector(selectAlerts),\r\n        createAlert: (alert) => dispatch(createAlert(alert)),\r\n    };\r\n}\r\n\r\nexport default useAlert;\r\n","// ルーティングとApiのエンドポイントを置く\r\nconst ROOT_URL = process.env.REACT_APP_END_POINT;\r\n\r\nexport const AuthUrls = {\r\n    LOGIN: `${ROOT_URL}/account/login/`,\r\n    STAFF_LOGIN: `${ROOT_URL}/account/staff-login/`,\r\n    REGISTER: `${ROOT_URL}/account/registration/`,\r\n    LOGOUT: `${ROOT_URL}/account/logout/`,\r\n    CHANGE_PASSWORD: `${ROOT_URL}/account/password/change/`,\r\n    RESET_PASSWORD: `${ROOT_URL}/account/password/reset/`,\r\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}/account/password/reset/confirm/`,\r\n    GET_USER_DATA: `${ROOT_URL}/account/user/`,\r\n    GET_USER_LIST: `${ROOT_URL}/api/users/`,\r\n};\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport useUser from \"../../hooks/useUser\";\r\nimport useAlert from \"../../hooks/useAlert\";\r\n\r\nimport { AuthUrls } from \"../../utils/authUrls\";\r\n\r\nconst Home_authenticated = () => {\r\n    const history = useHistory();\r\n    const [loginUser, setUser] = useState();\r\n    const [userList, setUserList] = useState([]);\r\n\r\n    const { createAlert } = useAlert();\r\n    const { getUserList, resetUserList, users } = useUser();\r\n\r\n    const get_user_ListUrl = AuthUrls.GET_USER_LIST;\r\n    const get_userUrl = AuthUrls.GET_USER_DATA;\r\n\r\n    const pullUserList = async () => {\r\n        resetUserList();\r\n\r\n        try {\r\n            const response = await axios.get(get_user_ListUrl);\r\n            const responseMap = response.data.map((obj) => {\r\n                return obj;\r\n            });\r\n            const responseData = _.mapKeys(responseMap, \"id\");\r\n            getUserList(responseData);\r\n            const userList = responseMap;\r\n            setUserList(userList);\r\n        } catch (error) {\r\n            createAlert({\r\n                message: \"ユーザーの取得に失敗しました。\",\r\n                type: \"danger\"\r\n            });\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(get_userUrl);\r\n            setUser(response.data.email);\r\n        } catch (error) {\r\n            createAlert({\r\n                message: \"セッションタイムアウトです。\",\r\n                type: \"danger\"\r\n            });\r\n        }\r\n    };\r\n\r\n    const UserList = Object.values(users);\r\n\r\n    useEffect(() => {\r\n        pullUserList();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>ユーザー一覧</h1>\r\n            <div>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => {\r\n                        history.push(\"/registration\");\r\n                    }}\r\n                >\r\n                    ユーザー登録\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>メールアドレス</th>\r\n                            <th>操作</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {UserList.map((user) => {\r\n                            console.log(user);\r\n                            return (\r\n                                <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={() => {\r\n                                                history.push(`/user/edit/${user.id}`);\r\n                                            }}\r\n                                        >\r\n                                            編集\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                history.push(`/user/delete/${user.id}`);\r\n                                            }}\r\n                                        >\r\n                                            削除\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home_authenticated;\r\n","import React from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nimport HomeUnauthenticated from \"./Home_unauthenticated\";\r\nimport HomeAuthenticated from \"./Home_authenticated\";\r\nimport { Container,Row } from \"react-bootstrap\";\r\n\r\nconst Home = () => {\r\n    const { isAuthenticated } = useAuth();\r\n\r\n    let Home_contents = <HomeUnauthenticated />;\r\n\r\n    if (isAuthenticated === true) {\r\n        Home_contents = <HomeAuthenticated />;\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"inner\">\r\n            <Row className=\"justify-content-center\">\r\n                {Home_contents}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport useAlert from \"../../hooks/useAlert\";\r\nimport { AuthUrls } from \"../../utils/authUrls\";\r\n\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\n\r\nconst UserInfoChangeForm = () => {\r\n  const [email, setEmail] = useState();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const { createAlert } = useAlert();\r\n\r\n  const get_userUrl = AuthUrls.GET_USER_DATA;\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const response = await axios.get(get_userUrl);\r\n      setEmail(response.data.email);\r\n    } catch (error) {\r\n      createAlert({\r\n        message:\r\n          \"ユーザーの取得に失敗しました、ログアウトして再ログインしてください\",\r\n        type: \"danger\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const patch_User = async (data) => {\r\n    try {\r\n      const response = await axios.patch(get_userUrl, data);\r\n      createAlert({\r\n        message: \"ユーザー情報を変更しました\",\r\n        type: \"success\",\r\n      });\r\n    } catch (error) {\r\n      createAlert({\r\n        message:\r\n          \"リクエストエラーです、すでに登録されているユーザー名かメールアドレスの可能性があります\",\r\n        type: \"danger\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // inputタグのクリックイベント無効\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={handleSubmit(patch_User)}\r\n      className=\"justify-content-center\"\r\n    >\r\n      <Form.Group\r\n        as={Row}\r\n        className=\"justify-content-center\"\r\n        controlId=\"formHorizontalEmail\"\r\n      >\r\n        <Form.Label>あなたのメールアドレス</Form.Label>\r\n        <Form.Control\r\n          name={\"email\"}\r\n          placeholder={\"メールアドレスはダミーでも可能です\"}\r\n          type={\"email\"}\r\n          defaultValue={email}\r\n          isInvalid={errors.email}\r\n          onClick={handleClick}\r\n          ref={register({\r\n              required: \"メールアドレスは必須です\",\r\n                pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                    message: \"メールアドレスの形式が正しくありません\",\r\n              },\r\n          })}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"justify-content-center\">\r\n        <Button type=\"submit\">Change User Info</Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UserInfoChangeForm;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport UserInfoChangeForm from \"./UserInfoChangeForm\";\r\nimport { Container, Button, Col } from \"react-bootstrap\";\r\n\r\nconst UserPage = () => {\r\n  const history = useHistory();\r\n  const UserInfoChangeFormComponent = React.memo(() => {\r\n    return <UserInfoChangeForm />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"UserInfoForm\">\r\n      <Container style={{ padding: 15 }}>\r\n        <Col sm={12} md={12} className=\"text-center\">\r\n          <h3 className=\"text-center mb-3 mt-3\">User Info</h3>\r\n          <p>\r\n            ＊変更したくない項目はフォームの内容を変更せずにボタンを押してください\r\n          </p>\r\n        </Col>\r\n        <UserInfoChangeFormComponent />\r\n        <div className=\"UserInfoButton\">\r\n          <Button\r\n            className=\"mr-2\"\r\n            variant=\"success\"\r\n            size=\"sm\"\r\n            type=\"submit\"\r\n            // onClick={() => history.push(`/password-change`)}\r\n          >\r\n            Go Password Change\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form, Button, ButtonToolbar } from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\nconst LoginForm = ({ onSubmit }) => {\r\n  // React Hook Form\r\n  const { register, handleSubmit, errors, formState } = useForm();\r\n  // inputタグのクリックイベント無効\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form noValidate onSubmit={handleSubmit(onSubmit)} className=\"justify-content-center\">\r\n        {/* email input */}\r\n        <Form.Group controlId={\"email\"}>\r\n          <Form.Label>{\"Email\"}</Form.Label>\r\n          <Form.Control\r\n            type={\"email\"}\r\n            name={\"email\"}\r\n            placeholder={\"Enter email\"}\r\n            // isInvalid={errors.email}\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"invalid email address\"\r\n              },\r\n            })}\r\n          />\r\n          {errors.email && (\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.email.message}\r\n            </Form.Control.Feedback>\r\n          )}\r\n        </Form.Group>\r\n\r\n        {/* password input */}\r\n        <Form.Group controlId={\"password\"}>\r\n          <Form.Label>\r\n            {\"パスワード\"}\r\n          </Form.Label>\r\n          <Form.Control\r\n            name={\"password\"}\r\n            placeholder={\"Password\"}\r\n            type={\"password\"}\r\n            isInvalid={errors.password}\r\n            onClick={handleClick}\r\n            ref={register({\r\n              required: \"パスワードは必須です\",\r\n              maxLength: {\r\n                value: 30,\r\n                message: \"30文字以内です\",\r\n              },\r\n            })}\r\n          />\r\n          {errors.password && (\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.password.message}\r\n            </Form.Control.Feedback>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <ButtonToolbar className=\"justify-content-center\">\r\n            <Button\r\n              variant={\"outline-primary\"}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting}\r\n            >\r\n              ログイン\r\n              </Button>\r\n          </ButtonToolbar>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nimport { Form, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { AuthUrls } from \"../../utils/authUrls\";\r\n\r\nconst LogoutForm = () => {\r\n  const history = useHistory()\r\n  // React Hook Form\r\n  const { handleSubmit } = useForm();\r\n  const { logoutUser } = useAuth();\r\n\r\n  const logoutUrl = AuthUrls.LOGOUT;\r\n\r\n  const onSubmit = async () => {\r\n    logoutUser();\r\n    await axios.post(logoutUrl);\r\n  };\r\n  return (\r\n      <div>\r\n          <div className=\"justify-content-center text-center mt-5 mb-3\">\r\n              <h3>ログアウトしますか？</h3>\r\n          </div>\r\n\r\n          <Form\r\n              noValidate\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              className=\"justify-content-center\"\r\n          >\r\n              <Form.Group>\r\n                  <ButtonToolbar className=\"justify-content-center\">\r\n                      <Button variant={\"danger\"} type=\"submit\">\r\n                          ログアウト\r\n                      </Button>\r\n                  </ButtonToolbar>\r\n              </Form.Group>\r\n              <div className=\"logout-button\">\r\n                  <Button variant=\"success\" onClick={() => history.push(\"/\")}>\r\n                      ホームへ\r\n                  </Button>\r\n              </div>\r\n          </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogoutForm;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nconst LoginFormLayout = (props) => {\r\n    return (\r\n        <Container style={{ padding: 15 }}>\r\n            <Row className=\"justify-content-center mx-auto mt-5 p-2\">\r\n                <Col sm={4} md={8}>\r\n                    <Card className=\"text-center\">\r\n                        <Card.Header>ログインフォーム</Card.Header>\r\n                        <Card.Body>{props.children}</Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default LoginFormLayout;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { selectProgress, selectShow, selectMessage, startProgress, stopProgress } from '../store/spinnerSlice';\r\n\r\nfunction useSpinner() {\r\n    // Sliceで定義したアクションをdispatchで呼び出す\r\n    const dispatch = useDispatch();\r\n\r\n    return {\r\n        progress: useSelector(selectProgress),\r\n        show: useSelector(selectShow),\r\n        dialogMessage: useSelector(selectMessage),\r\n        // call action\r\n        startProgress: (dialogMessage) => dispatch(startProgress({ dialogMessage })),\r\n        stopProgress: () => dispatch(stopProgress()),\r\n    };\r\n}\r\n\r\nexport default useSpinner;\r\n","import React from \"react\";\r\nimport { Modal, Spinner } from \"react-bootstrap\";\r\nimport useSpinner from '../hooks/useSpinner';\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n\r\nconst SpinnerModal = () => {\r\n    const { show, dialogMessage } = useSpinner();\r\n\r\n    // モーダルテスト用\r\n    // const { startProgress, stopProgress, progress, show, dialogMessage, } = useSpinner();\r\n    // const dispatch = useDispatch();\r\n    // dispatch(startProgress(\"ログイン中\"));\r\n\r\n    return (\r\n        <Modal show={show} backdrop=\"static\" keyboard={false} className=\"modal-backdrop\">\r\n            <Modal.Header>{dialogMessage}</Modal.Header>\r\n            <Modal.Body>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SpinnerModal;\r\n","import React from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport LogoutForm from './LogoutForm';\r\nimport LoginFormLayout from './LoginFormLayout';\r\nimport axios from 'axios';\r\nimport SpinnerModal from '../../components/Spinner';\r\nimport useAlert from '../../hooks/useAlert';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSpinner from '../../hooks/useSpinner';\r\nimport { AuthUrls } from '../../utils/authUrls.js';\r\n\r\nconst LoginFormContainer = () => {\r\n    // Alert Hooks\r\n    const { createAlert } = useAlert();\r\n    // 認証状態でルーティングするためのHooks\r\n    const { loginUser, isAuthenticated } = useAuth();\r\n    // Spinner Hooks\r\n    const { startProgress, stopProgress, progress } = useSpinner();\r\n\r\n    // ログインリクエストURL\r\n    const loginUrl = AuthUrls.LOGIN;\r\n    // スピナー\r\n    let Modal = <SpinnerModal />;\r\n\r\n    const onSubmit = async (data) => {\r\n      // BackDropModalとスピナー表示\r\n      startProgress(\"ログイン中\");\r\n\r\n      try {\r\n        const response = await axios.post(loginUrl, data);\r\n        loginUser();\r\n        createAlert({\r\n          message: \"ログインに成功しました\",\r\n          type: \"success\",\r\n        });\r\n        stopProgress();\r\n      } catch (error) {\r\n        createAlert({\r\n          message: \"ログインに失敗しました\",\r\n          type: \"danger\",\r\n        });\r\n        stopProgress();\r\n      }\r\n    };\r\n\r\n    // 認証状態でフォームチェンジ\r\n    let form = <LoginForm onSubmit={onSubmit} />;\r\n\r\n    if (isAuthenticated === true) {\r\n      form = <LogoutForm />;\r\n    }\r\n\r\n    // スピナーを出す\r\n    if (!progress) {\r\n      Modal = <SpinnerModal show={false} />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {Modal}\r\n        <LoginFormLayout>{form}</LoginFormLayout>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  export default LoginFormContainer;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Nomatch = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <h1>404</h1>\r\n          <p>Page not found</p>\r\n          <button onClick={() => history.push(\"/\")}>\r\n              Go Back Top\r\n          </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nomatch;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n// Custom routing\r\nimport PrivateRoute from \"./Route/PrivateRoute\";\r\nimport LoginRoute from \"./Route/LoginRoute\";\r\nimport LogoutRoute from \"./Route/LogoutRoute\";\r\n// randing\r\nimport Home from \"./components/user/Home\";\r\n// Involved with user routing\r\nimport User from \"./components/user/UserPage\";\r\nimport Login from \"./components/user/LoginFormContainer\";\r\nimport Logout from \"./components/user/LogoutForm\";\r\n// 404 error\r\nimport Nomatch from \"./components/user/Nomatch\";\r\n\r\nconst MainContent = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\">\r\n            <Home />\r\n        </Route>\r\n        <LoginRoute path=\"/login\" component={Login} />\r\n        <LogoutRoute path=\"/logout\" component={Logout} />\r\n        <PrivateRoute path=\"/user\" component={User} />\r\n        <Route component={Nomatch} />\r\n    </Switch>\r\n);\r\n\r\nexport default MainContent;\r\n","import React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst Logged_in_NavbarComponent = () => {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <LinkContainer to=\"/\">\r\n                <Navbar.Brand>\r\n                    <img\r\n                        alt=\"\"\r\n                        src={`${process.env.PUBLIC_URL}/logo192.png`}\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        className=\"d-inline-block align-top\"/>\r\n                </Navbar.Brand>\r\n            </LinkContainer>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <LinkContainer to=\"/user\">\r\n                        <Nav.Link>My Page</Nav.Link>\r\n                    </LinkContainer>\r\n                </Nav>\r\n                <Nav>\r\n                    <LinkContainer to=\"/logout\">\r\n                        <Nav.Link>Logout</Nav.Link>\r\n                    </LinkContainer>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n\r\n}\r\n\r\nexport default Logged_in_NavbarComponent\r\n","import React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst UnLogged_in_NavbarComponent = () => {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <LinkContainer to=\"/\">\r\n                <Navbar.Brand>\r\n                    <img\r\n                        alt=\"\"\r\n                        src={`${process.env.PUBLIC_URL}/logo192.png`}\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        className=\"d-inline-block align-top\"/>\r\n                </Navbar.Brand>\r\n            </LinkContainer>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/signup\">\r\n                        <Nav.Link>Sign Up</Nav.Link>\r\n                    </LinkContainer>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n\r\n}\r\n\r\nexport default UnLogged_in_NavbarComponent\r\n","import React from \"react\";\r\n\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nimport LoggedNavbar from './Logged_in_Navbar'\r\nimport UnLoggedNavbar from './UnLogged_in_Navbar'\r\n\r\n\r\nconst NavbarComponent = () => {\r\n\r\n    const { isAuthenticated } = useAuth();\r\n    let NavbarContent = <UnLoggedNavbar />\r\n\r\n    if (isAuthenticated === true) {\r\n        NavbarContent = <LoggedNavbar />\r\n\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            {NavbarContent}\r\n        </header>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default NavbarComponent\r\n","import Cookies from 'universal-cookie'\r\n\r\nconst cookies = new Cookies();\r\n\r\n// props.childrenの意味はよくわかっていない\r\nconst LoggedOut = props =>\r\n    cookies.get('access_token') ? null : props.children;\r\n\r\nexport default LoggedOut;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport MainContent from './MainContent';\r\nimport { BrowserRouter, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport HeaderComponent from './components/Header';\r\nimport Auth from './components/Auth';\r\nimport Home from './pages/Home';\r\n// import Header from './components/Header';\r\nimport Detail from './pages/Detail';\r\nimport LoggedIn from './components/LoggedIn';\r\nimport LoggedOut from './components/LoggedOut';\r\nimport { CookiesProvider, withCookies } from 'react-cookie';\r\n\r\nvar csrftoken = Cookies.get('csrftoken');\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BrowserRouter>\r\n          <div className=\"app\">\r\n            <HeaderComponent />\r\n            <MainContent />\r\n          </div>\r\n        </BrowserRouter>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// function App() {\r\n//   return (\r\n//     <Router>\r\n//       {console.log(process.env)}\r\n//       <div className=\"App\">\r\n//         <CookiesProvider>\r\n//           <Header />\r\n//           <LoggedIn>\r\n//             {/* LoggedIn Only */}\r\n//             <Route exact path=\"/\" component={Home} />\r\n//             <Route exact path=\"/:userId\" component={Detail} />\r\n//           </LoggedIn>\r\n//           <LoggedOut>\r\n//             {/* LoggedOut Only */}\r\n//             <Route exact path=\"/login\" component={Auth} />\r\n//           </LoggedOut>\r\n//         </CookiesProvider>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport store from \"./store/\";\r\nimport App from \"./App\";\r\n// import \"./css/style.css\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { persistStore } from 'redux-persist';\r\n\r\nlet persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <CookiesProvider>\r\n            <PersistGate loading={null} persistor={persistor}>\r\n                <App />\r\n            </PersistGate>\r\n        </CookiesProvider>\r\n    </Provider>\r\n  , document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}